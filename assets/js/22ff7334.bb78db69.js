"use strict";(self.webpackChunk_react_text_game_docs=self.webpackChunk_react_text_game_docs||[]).push([[9576],{531:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(2098);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},9671:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"api/core/type-aliases/StoryContent","title":"Type Alias: StoryContent()","description":"StoryContent = \\\\(props) => Component[]","source":"@site/docs/api/core/type-aliases/StoryContent.md","sourceDirName":"api/core/type-aliases","slug":"/api/core/type-aliases/StoryContent","permalink":"/api/core/type-aliases/StoryContent","draft":false,"unlisted":false,"editUrl":"https://github.com/laruss/tree/main/apps/docs/docs/api/core/type-aliases/StoryContent.md","tags":[],"version":"current","frontMatter":{}}');var s=t(90),o=t(531);const a={},i="Type Alias: StoryContent()",c={},p=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"T",id:"t",level:3},{value:"Parameters",id:"parameters",level:2},{value:"props",id:"props",level:3},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2},{value:"Remarks",id:"remarks",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"type-alias-storycontent",children:"Type Alias: StoryContent()"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"StoryContent"})," = <",(0,s.jsx)(n.code,{children:"T"}),">(",(0,s.jsx)(n.code,{children:"props"}),") => ",(0,s.jsx)(n.a,{href:"/api/core/type-aliases/Component",children:(0,s.jsx)(n.code,{children:"Component"})}),"[]"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/blob/21bfc433e29f86c4a02131cf4fd24f7723dbe21b/packages/core/src/passages/story/types.ts#L909",children:"passages/story/types.ts:909"})]}),"\n",(0,s.jsx)(n.p,{children:"Function type for story content generation.\nReceives props and returns an array of components to display."}),"\n",(0,s.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"t",children:"T"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"T"})," ",(0,s.jsx)(n.em,{children:"extends"})," ",(0,s.jsx)(n.a,{href:"/api/core/type-aliases/InitVarsType",children:(0,s.jsx)(n.code,{children:"InitVarsType"})})," = ",(0,s.jsx)(n.a,{href:"/api/core/type-aliases/EmptyObject",children:(0,s.jsx)(n.code,{children:"EmptyObject"})})]}),"\n",(0,s.jsx)(n.p,{children:"Type of props passed to the story (extends InitVarsType)"}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"props",children:"props"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"T"})}),"\n",(0,s.jsx)(n.p,{children:"Properties used for conditional rendering or dynamic content"}),"\n",(0,s.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/api/core/type-aliases/Component",children:(0,s.jsx)(n.code,{children:"Component"})}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Array of components that make up the story"}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Simple static story\nconst story: StoryContent = () => [\n  { type: 'header', content: 'Welcome' },\n  { type: 'text', content: 'Your adventure begins...' }\n];\n\n// Dynamic story based on game state\nconst story: StoryContent<{ playerName: string; hasKey: boolean }> = (props) => [\n  { type: 'text', content: `Hello, ${props.playerName}!` },\n  {\n    type: 'actions',\n    content: [\n      {\n        label: 'Open Door',\n        action: () => Game.jumpTo('next-room'),\n        isDisabled: !props.hasKey,\n        tooltip: props.hasKey ? undefined : {\n          content: 'You need a key to open this door'\n        }\n      }\n    ]\n  }\n];\n"})}),"\n",(0,s.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,s.jsx)(n.p,{children:"The function is called during rendering, so:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keep logic lightweight for performance"}),"\n",(0,s.jsx)(n.li,{children:"Access reactive game state through props for dynamic content"}),"\n",(0,s.jsx)(n.li,{children:"Return value is memoized based on props"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);