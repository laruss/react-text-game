"use strict";(self.webpackChunk_react_text_game_docs=self.webpackChunk_react_text_game_docs||[]).push([[21],{531:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>c});var o=s(2098);const n={},a=o.createContext(n);function r(e){const t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(a.Provider,{value:t},e.children)}},5028:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"api/core/type-aliases/AnyHotspot","title":"Type Alias: AnyHotspot","description":"AnyHotspot = MapLabelHotspot \\\\| MapImageHotspot \\\\| SideLabelHotspot \\\\| SideImageHotspot \\\\| MapMenu","source":"@site/docs/api/core/type-aliases/AnyHotspot.md","sourceDirName":"api/core/type-aliases","slug":"/api/core/type-aliases/AnyHotspot","permalink":"/api/core/type-aliases/AnyHotspot","draft":false,"unlisted":false,"editUrl":"https://github.com/laruss/tree/main/apps/docs/docs/api/core/type-aliases/AnyHotspot.md","tags":[],"version":"current","frontMatter":{}}');var n=s(90),a=s(531);const r={},c="Type Alias: AnyHotspot",i={},p=[{value:"Remarks",id:"remarks",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"type-alias-anyhotspot",children:"Type Alias: AnyHotspot"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"AnyHotspot"})," = ",(0,n.jsx)(t.a,{href:"/api/core/interfaces/MapLabelHotspot",children:(0,n.jsx)(t.code,{children:"MapLabelHotspot"})})," | ",(0,n.jsx)(t.a,{href:"/api/core/interfaces/MapImageHotspot",children:(0,n.jsx)(t.code,{children:"MapImageHotspot"})})," | ",(0,n.jsx)(t.a,{href:"/api/core/interfaces/SideLabelHotspot",children:(0,n.jsx)(t.code,{children:"SideLabelHotspot"})})," | ",(0,n.jsx)(t.a,{href:"/api/core/interfaces/SideImageHotspot",children:(0,n.jsx)(t.code,{children:"SideImageHotspot"})})," | ",(0,n.jsx)(t.a,{href:"/api/core/interfaces/MapMenu",children:(0,n.jsx)(t.code,{children:"MapMenu"})})]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Defined in: ",(0,n.jsx)(t.a,{href:"https://github.com/laruss/react-text-game/blob/e34eb43926be39f5eb7f814c8cc26bdc59d9c215/packages/core/src/passages/interactiveMap/types.ts#L611",children:"passages/interactiveMap/types.ts:611"})]}),"\n",(0,n.jsx)(t.p,{children:"Union type of all possible hotspot types.\nUsed for type-safe hotspot arrays in interactive maps."}),"\n",(0,n.jsx)(t.h2,{id:"remarks",children:"Remarks"}),"\n",(0,n.jsxs)(t.p,{children:["This discriminated union allows TypeScript to narrow hotspot types\nbased on the ",(0,n.jsx)(t.code,{children:"type"})," property when rendering or processing hotspots."]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);