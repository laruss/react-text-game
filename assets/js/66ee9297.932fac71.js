"use strict";(self.webpackChunk_react_text_game_docs=self.webpackChunk_react_text_game_docs||[]).push([[8164],{531:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var s=r(2098);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}},6579:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"mdx-integration","title":"MDX Integration","description":"The @react-text-game/mdx package enables you to write game passages using MDX (Markdown + JSX), combining narrative content with interactive React components in an author-friendly format.","source":"@site/docs/mdx-integration.md","sourceDirName":".","slug":"/mdx-integration","permalink":"/mdx-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/laruss/tree/main/apps/docs/docs/mdx-integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Core Concepts","permalink":"/core-concepts"},"next":{"title":"Internationalization","permalink":"/i18n"}}');var i=r(90),t=r(531);const o={},l="MDX Integration",c={},d=[{value:"Why MDX?",id:"why-mdx",level:2},{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"With Vite",id:"with-vite",level:3},{value:"With Other Bundlers",id:"with-other-bundlers",level:3},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Components Reference",id:"components-reference",level:2},{value:"Text &amp; Headers",id:"text--headers",level:3},{value:"Images &amp; Video",id:"images--video",level:3},{value:"<code>&lt;Actions&gt;</code> and <code>&lt;Action&gt;</code>",id:"actions-and-action",level:3},{value:"<code>&lt;Conversation&gt;</code> and <code>&lt;Say&gt;</code>",id:"conversation-and-say",level:3},{value:"<code>&lt;Include&gt;</code>",id:"include",level:3},{value:"Dynamic Variables",id:"dynamic-variables",level:3},{value:"Bare Expressions (Recommended)",id:"bare-expressions-recommended",level:4},{value:"<code>&lt;Var&gt;</code> Wrapper (Alternative)",id:"var-wrapper-alternative",level:4},{value:"Limitations &amp; Best Practices",id:"limitations--best-practices",level:2},{value:"Supported Components Only",id:"supported-components-only",level:3},{value:"Unsupported HTML Elements",id:"unsupported-html-elements",level:3},{value:"Unsupported Props",id:"unsupported-props",level:3},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mdx-integration",children:"MDX Integration"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"@react-text-game/mdx"})," package enables you to write game passages using MDX (Markdown + JSX), combining narrative content with interactive React components in an author-friendly format."]}),"\n",(0,i.jsx)(n.h2,{id:"why-mdx",children:"Why MDX?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Author-friendly"}),": Write game content in familiar Markdown syntax"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component integration"}),": Embed React components directly in your narrative"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Type-safe"}),": Full TypeScript support for your custom components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vite integration"}),": Optimized build pipeline with Vite plugin"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Structured data extraction"}),": Automatically extract metadata and story structure from MDX files"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"Install the package along with its peer dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Using Bun\nbun add @react-text-game/mdx @mdx-js/mdx @mdx-js/react\n\n# Using npm\nnpm install @react-text-game/mdx @mdx-js/mdx @mdx-js/react\n"})}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.h3,{id:"with-vite",children:"With Vite"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Set up MDX"})," following the ",(0,i.jsx)(n.a,{href:"https://mdxjs.com/docs/getting-started/#vite",children:"official MDX documentation"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Add the React Text Game plugin"})," to your MDX configuration in ",(0,i.jsx)(n.code,{children:"vite.config.ts"}),":"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import mdx from "@mdx-js/rollup";\nimport { reactTextGameStoryPlugin } from "@react-text-game/mdx/plugin";\nimport react from "@vitejs/plugin-react";\nimport { defineConfig } from "vite";\n\nexport default defineConfig({\n  plugins: [\n    {\n      enforce: "pre",\n      ...mdx({ ...reactTextGameStoryPlugin() }),\n    },\n    react(),\n  ],\n});\n'})}),"\n",(0,i.jsx)(n.h3,{id:"with-other-bundlers",children:"With Other Bundlers"}),"\n",(0,i.jsxs)(n.p,{children:["Follow the ",(0,i.jsx)(n.a,{href:"https://mdxjs.com/docs/getting-started/",children:"MDX installation guide"})," for your bundler, then pass ",(0,i.jsx)(n.code,{children:"reactTextGameStoryPlugin()"})," as an option to the MDX compiler:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"import { compile } from '@mdx-js/mdx';\nimport { reactTextGameStoryPlugin } from '@react-text-game/mdx/plugin';\n\nawait compile(mdxSource, { ...reactTextGameStoryPlugin() });\n"})}),"\n",(0,i.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Create an MDX file for your story (e.g., ",(0,i.jsx)(n.code,{children:"src/game/stories/intro.mdx"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:'---\npassageId: intro\n---\nimport { Action, Actions } from "@react-text-game/mdx";\nimport { player } from "../entities/player";\n\n# Welcome to the Adventure\n\nHello, {player.name}! This is your first passage.\n\n<Actions>\n    <Action onPerform={() => alert("Started!")}>Start Adventure</Action>\n</Actions>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Import your MDX files"})," so they register with the game engine. The recommended approach is to create a registry structure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// src/game/stories/index.ts\nimport "./intro.mdx";\nimport "./chapter1.mdx";\n\n// src/game/registry.ts\nexport * from \'./stories\';\n\n// src/main.tsx\nimport "./game/registry";\n'})}),"\n",(0,i.jsx)(n.h2,{id:"components-reference",children:"Components Reference"}),"\n",(0,i.jsx)(n.h3,{id:"text--headers",children:"Text & Headers"}),"\n",(0,i.jsx)(n.p,{children:"Standard Markdown text and headers are automatically converted to the appropriate core components:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:"# Header Level 1\n## Header Level 2\n### Header Level 3\n\nRegular paragraph text becomes a text component.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"images--video",children:"Images & Video"}),"\n",(0,i.jsx)(n.p,{children:"Use standard Markdown image syntax or HTML elements:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:'![Alt text](./image.png "Image title")\n\n<img src="./image.png" alt="Alt text" />\n\n<video src="./video.mp4" />\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"actions-and-action",children:[(0,i.jsx)(n.code,{children:"<Actions>"})," and ",(0,i.jsx)(n.code,{children:"<Action>"})]}),"\n",(0,i.jsxs)(n.p,{children:["Container for interactive action buttons. Each ",(0,i.jsx)(n.code,{children:"<Action>"})," represents a clickable choice."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:'<Actions>\n    <Action onPerform={() => alert("Action 1")}>\n        First Choice\n    </Action>\n    <Action\n        onPerform={() => Game.jumpTo("chapter2")}\n        color="danger"\n        variant="bordered"\n    >\n        Dangerous Choice\n    </Action>\n</Actions>\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Props for ",(0,i.jsx)(n.code,{children:"<Action>"}),":"]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"onPerform: () => void"})," - Callback executed when clicked (required)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"children: string"})," - Button label text (required)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"color?: ButtonColor"})," - Color scheme: ",(0,i.jsx)(n.code,{children:'"default"'}),", ",(0,i.jsx)(n.code,{children:'"primary"'}),", ",(0,i.jsx)(n.code,{children:'"secondary"'}),", ",(0,i.jsx)(n.code,{children:'"success"'}),", ",(0,i.jsx)(n.code,{children:'"warning"'}),", ",(0,i.jsx)(n.code,{children:'"danger"'})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"variant?: ButtonVariant"})," - Style variant: ",(0,i.jsx)(n.code,{children:'"solid"'}),", ",(0,i.jsx)(n.code,{children:'"bordered"'}),", ",(0,i.jsx)(n.code,{children:'"light"'}),", ",(0,i.jsx)(n.code,{children:'"flat"'}),", ",(0,i.jsx)(n.code,{children:'"faded"'}),", ",(0,i.jsx)(n.code,{children:'"shadow"'}),", ",(0,i.jsx)(n.code,{children:'"ghost"'})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"isDisabled?: boolean"})," - Disable the button"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tooltip?: object"})," - Tooltip configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"className?: string"})," - Custom CSS classes"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Props for ",(0,i.jsx)(n.code,{children:"<Actions>"}),":"]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'direction?: "horizontal" | "vertical"'})," - Layout direction (default: ",(0,i.jsx)(n.code,{children:'"horizontal"'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"className?: string"})," - Custom CSS classes"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"conversation-and-say",children:[(0,i.jsx)(n.code,{children:"<Conversation>"})," and ",(0,i.jsx)(n.code,{children:"<Say>"})]}),"\n",(0,i.jsx)(n.p,{children:"Display dialogue or conversation sequences with multiple messages."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:'<Conversation>\n    <Say>Hello there!</Say>\n    <Say who={{ name: "NPC", avatar: "./npc.png" }} side="left">\n        Greetings, traveler!\n    </Say>\n    <Say who={{ name: "Player" }} side="right" color="#3b82f6">\n        I\'m looking for the temple.\n    </Say>\n</Conversation>\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Props for ",(0,i.jsx)(n.code,{children:"<Say>"}),":"]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"children: ReactNode"})," - Message content (required)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"who?: { name?: string; avatar?: string }"})," - Speaker information"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'side?: "left" | "right"'})," - Message alignment (default: ",(0,i.jsx)(n.code,{children:'"left"'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"color?: string"})," - Custom bubble color (hex format)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"classNames?: object"})," - CSS class overrides"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Props for ",(0,i.jsx)(n.code,{children:"<Conversation>"}),":"]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'appearance?: "atOnce" | "byClick"'})," - Message reveal mode (default: ",(0,i.jsx)(n.code,{children:'"atOnce"'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'variant?: "chat" | "messenger"'})," - Visual style (default: ",(0,i.jsx)(n.code,{children:'"chat"'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"className?: string"})," - Custom CSS classes"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"include",children:(0,i.jsx)(n.code,{children:"<Include>"})}),"\n",(0,i.jsx)(n.p,{children:"Embed another story passage within the current one."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:'\x3c!-- Include an MDX story --\x3e\n<Include storyId="common-intro" />\n\n\x3c!-- Include a TypeScript-defined story --\x3e\n<Include storyId="combat-system" />\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Props:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"storyId: string"})," - ID of the story passage to include (required)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"dynamic-variables",children:"Dynamic Variables"}),"\n",(0,i.jsx)(n.p,{children:"Embed dynamic variables that are evaluated at runtime when the story is displayed."}),"\n",(0,i.jsx)(n.h4,{id:"bare-expressions-recommended",children:"Bare Expressions (Recommended)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:"---\npassageId: player-status\n---\nimport { player } from '../entities/player';\n\n# Hello, {player.name}!\n\nYou have {player.gold} gold coins and {player.inventory.length} items.\n\n<Actions>\n    <Action onPerform={() => console.log(\"test\")}>\n        Talk to {player.name}\n    </Action>\n</Actions>\n"})}),"\n",(0,i.jsxs)(n.h4,{id:"var-wrapper-alternative",children:[(0,i.jsx)(n.code,{children:"<Var>"})," Wrapper (Alternative)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:"---\npassageId: player-status\n---\nimport { Var } from \"@react-text-game/mdx\";\nimport { player } from '../entities/player';\n\n# Hello, <Var>{player.name}</Var>!\n\nYou have <Var>{player.gold}</Var> gold coins.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key Features:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Runtime Evaluation"}),": Variables are evaluated when the story renders"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IDE Support"}),": Full TypeScript autocomplete and type checking"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Import Tracking"}),": IDE enforces proper imports for referenced variables"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Works Everywhere"}),": Paragraphs, headers, Say bubbles, Action labels, etc."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Expression Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:'\x3c!-- Simple property access --\x3e\n{player.name}\n\n\x3c!-- Nested properties --\x3e\n{player.stats.strength}\n\n\x3c!-- Calculations --\x3e\n{player.gold * 2}\n\n\x3c!-- Method calls --\x3e\n{player.getTitle()}\n\n\x3c!-- Conditional expressions --\x3e\n{player.level >= 10 ? "Expert" : "Novice"}\n\n\x3c!-- Array/object methods --\x3e\n{player.inventory.map(item => item.name).join(", ")}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"limitations--best-practices",children:"Limitations & Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"supported-components-only",children:"Supported Components Only"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Only use components provided by ",(0,i.jsx)(n.code,{children:"@react-text-game/mdx"})," or standard HTML/Markdown elements."]})," Custom React components are not supported."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Supported:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:'\x3c!-- Package components --\x3e\n<Action onPerform={() => {}}>Click</Action>\n<Say>Hello</Say>\n<Include storyId="intro" />\n\n\x3c!-- Standard HTML --\x3e\n<video src="video.mp4" />\n<img src="image.png" />\n\n\x3c!-- Markdown syntax --\x3e\n# Header\n![Image](image.png)\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Not supported:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",children:"\x3c!-- Custom components will be ignored --\x3e\n<CustomButton onClick={() => {}}>Click</CustomButton>\n<MyComponent />\n"})}),"\n",(0,i.jsx)(n.h3,{id:"unsupported-html-elements",children:"Unsupported HTML Elements"}),"\n",(0,i.jsx)(n.p,{children:"Only specific HTML elements are processed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<img>"})," - Converted to ",(0,i.jsx)(n.code,{children:"ImageComponent"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<video>"})," - Converted to ",(0,i.jsx)(n.code,{children:"VideoComponent"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"All other HTML elements are ignored"})," and will not appear in the final story."]}),"\n",(0,i.jsx)(n.h3,{id:"unsupported-props",children:"Unsupported Props"}),"\n",(0,i.jsxs)(n.p,{children:["The plugin only processes specific props for each component. ",(0,i.jsx)(n.strong,{children:"Unsupported props are silently ignored."})]}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.a,{href:"/api/mdx/",children:"full API documentation"})," for complete prop specifications."]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Explore the ",(0,i.jsx)(n.a,{href:"/api/mdx/",children:"MDX API documentation"})]}),"\n",(0,i.jsxs)(n.li,{children:["Review the ",(0,i.jsx)(n.a,{href:"./core-concepts",children:"Core Concepts"})," for understanding game architecture"]}),"\n",(0,i.jsx)(n.li,{children:"Check out example MDX stories in the repository"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);