"use strict";(self.webpackChunk_react_text_game_docs=self.webpackChunk_react_text_game_docs||[]).push([[1796],{531:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var a=n(2098);const t={},r=a.createContext(t);function i(e){const s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:s},e.children)}},9879:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"api/core/classes/InteractiveMap","title":"Class: InteractiveMap","description":"Defined in49","source":"@site/docs/api/core/classes/InteractiveMap.md","sourceDirName":"api/core/classes","slug":"/api/core/classes/InteractiveMap","permalink":"/react-text-game/api/core/classes/InteractiveMap","draft":false,"unlisted":false,"editUrl":"https://github.com/laruss/react-text-game/tree/main/apps/docs/docs/api/core/classes/InteractiveMap.md","tags":[],"version":"current","frontMatter":{}}');var t=n(90),r=n(531);const i={},c="Class: InteractiveMap",l={},d=[{value:"Example",id:"example",level:2},{value:"See",id:"see",level:2},{value:"Extends",id:"extends",level:2},{value:"Constructors",id:"constructors",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"id",id:"id",level:5},{value:"options",id:"options",level:5},{value:"Returns",id:"returns",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Properties",id:"properties",level:2},{value:"id",id:"id-1",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"type",id:"type",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Methods",id:"methods",level:2},{value:"display()",id:"display",level:3},{value:"Type Parameters",id:"type-parameters",level:4},{value:"T",id:"t",level:5},{value:"Parameters",id:"parameters-1",level:4},{value:"props",id:"props",level:5},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example-1",level:4},{value:"Overrides",id:"overrides-1",level:4}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"class-interactivemap",children:"Class: InteractiveMap"})}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/laruss/react-text-game/blob/e5ef816bda5c036b279e7224f1e3136384b85530/packages/core/src/passages/interactiveMap/interactiveMap.ts#L49",children:"passages/interactiveMap/interactiveMap.ts:49"})]}),"\n",(0,t.jsx)(s.p,{children:"Map-based interactive passage with clickable hotspots."}),"\n",(0,t.jsx)(s.p,{children:"Interactive maps display an image with interactive hotspots (buttons/images) that\ncan be positioned on the map or on its sides. Hotspots can be labels, images, or menus.\nBoth the map image and hotspots can be dynamic based on game state."}),"\n",(0,t.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"import { newInteractiveMap } from '@react-text-game/core';\n\nconst worldMap = newInteractiveMap('world-map', {\n  image: '/maps/world.jpg',\n  bgImage: '/maps/world-bg.jpg',\n  hotspots: [\n    {\n      type: 'label',\n      content: 'Village',\n      position: { x: 30, y: 40 },\n      action: () => Game.jumpTo('village')\n    },\n    {\n      type: 'image',\n      content: {\n        idle: '/icons/chest.png',\n        hover: '/icons/chest-glow.png'\n      },\n      position: { x: 60, y: 70 },\n      action: () => openChest()\n    },\n    () => player.hasKey ? {\n      type: 'label',\n      content: 'Secret Door',\n      position: 'top',\n      action: () => Game.jumpTo('secret')\n    } : undefined\n  ]\n});\n"})}),"\n",(0,t.jsx)(s.h2,{id:"see",children:"See"}),"\n",(0,t.jsx)(s.p,{children:"newInteractiveMap - Factory function for creating InteractiveMap instances"}),"\n",(0,t.jsx)(s.h2,{id:"extends",children:"Extends"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage",children:(0,t.jsx)(s.code,{children:"Passage"})})}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsx)(s.h3,{id:"constructor",children:"Constructor"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"new InteractiveMap"}),"(",(0,t.jsx)(s.code,{children:"id"}),", ",(0,t.jsx)(s.code,{children:"options"}),"): ",(0,t.jsx)(s.code,{children:"InteractiveMap"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/laruss/react-text-game/blob/e5ef816bda5c036b279e7224f1e3136384b85530/packages/core/src/passages/interactiveMap/interactiveMap.ts#L61",children:"passages/interactiveMap/interactiveMap.ts:61"})]}),"\n",(0,t.jsx)(s.p,{children:"Creates a new InteractiveMap passage."}),"\n",(0,t.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"id",children:"id"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"string"})}),"\n",(0,t.jsx)(s.p,{children:"Unique identifier for this map"}),"\n",(0,t.jsx)(s.h5,{id:"options",children:"options"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"/react-text-game/api/core/type-aliases/InteractiveMapOptions",children:(0,t.jsx)(s.code,{children:"InteractiveMapOptions"})})}),"\n",(0,t.jsx)(s.p,{children:"Configuration including image, hotspots, and styling"}),"\n",(0,t.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"InteractiveMap"})}),"\n",(0,t.jsx)(s.h4,{id:"overrides",children:"Overrides"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage",children:(0,t.jsx)(s.code,{children:"Passage"})}),".",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage#constructor",children:(0,t.jsx)(s.code,{children:"constructor"})})]}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"id-1",children:"id"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"readonly"})," ",(0,t.jsx)(s.strong,{children:"id"}),": ",(0,t.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/laruss/react-text-game/blob/e5ef816bda5c036b279e7224f1e3136384b85530/packages/core/src/passages/passage.ts#L34",children:"passages/passage.ts:34"})]}),"\n",(0,t.jsx)(s.p,{children:"Unique identifier for this passage.\nUsed for navigation and registry lookup."}),"\n",(0,t.jsx)(s.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage",children:(0,t.jsx)(s.code,{children:"Passage"})}),".",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage#id",children:(0,t.jsx)(s.code,{children:"id"})})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"type",children:"type"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"readonly"})," ",(0,t.jsx)(s.strong,{children:"type"}),": ",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/type-aliases/PassageType",children:(0,t.jsx)(s.code,{children:"PassageType"})})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/laruss/react-text-game/blob/e5ef816bda5c036b279e7224f1e3136384b85530/packages/core/src/passages/passage.ts#L40",children:"passages/passage.ts:40"})]}),"\n",(0,t.jsx)(s.p,{children:"The type of this passage.\nDetermines how the passage should be rendered in the UI."}),"\n",(0,t.jsx)(s.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage",children:(0,t.jsx)(s.code,{children:"Passage"})}),".",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage#type",children:(0,t.jsx)(s.code,{children:"type"})})]}),"\n",(0,t.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(s.h3,{id:"display",children:"display()"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"display"}),"<",(0,t.jsx)(s.code,{children:"T"}),">(",(0,t.jsx)(s.code,{children:"props"}),"): ",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/type-aliases/InteractiveMapType",children:(0,t.jsx)(s.code,{children:"InteractiveMapType"})})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/laruss/react-text-game/blob/e5ef816bda5c036b279e7224f1e3136384b85530/packages/core/src/passages/interactiveMap/interactiveMap.ts#L95",children:"passages/interactiveMap/interactiveMap.ts:95"})]}),"\n",(0,t.jsx)(s.p,{children:"Renders the interactive map by resolving dynamic values and filtering hotspots."}),"\n",(0,t.jsx)(s.p,{children:"Processes all hotspots by:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"Calling hotspot functions with props (if they are functions)"}),"\n",(0,t.jsx)(s.li,{children:"Filtering out undefined hotspots (useful for conditional hotspots)"}),"\n",(0,t.jsx)(s.li,{children:"Resolving image URLs (if they are functions)"}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"t",children:"T"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"T"})," ",(0,t.jsx)(s.em,{children:"extends"})," ",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/type-aliases/InitVarsType",children:(0,t.jsx)(s.code,{children:"InitVarsType"})})," = ",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/type-aliases/EmptyObject",children:(0,t.jsx)(s.code,{children:"EmptyObject"})})]}),"\n",(0,t.jsx)(s.p,{children:"Type of props to pass when resolving dynamic content"}),"\n",(0,t.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsx)(s.h5,{id:"props",children:"props"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"T"})," = ",(0,t.jsx)(s.code,{children:"..."})]}),"\n",(0,t.jsx)(s.p,{children:"Properties used when evaluating dynamic hotspots/images"}),"\n",(0,t.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"/react-text-game/api/core/type-aliases/InteractiveMapType",children:(0,t.jsx)(s.code,{children:"InteractiveMapType"})})}),"\n",(0,t.jsx)(s.p,{children:"Processed map configuration ready for rendering"}),"\n",(0,t.jsx)(s.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typescript",children:"const map = newInteractiveMap('map', {\n  image: () => `/maps/${currentSeason}.jpg`,\n  hotspots: [\n    () => isNight ? undefined : {\n      type: 'label',\n      content: 'Shop',\n      position: { x: 50, y: 50 },\n      action: () => openShop()\n    }\n  ]\n});\n\nconst { image, hotspots } = map.display({ currentSeason: 'winter', isNight: false });\n"})}),"\n",(0,t.jsx)(s.h4,{id:"overrides-1",children:"Overrides"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage",children:(0,t.jsx)(s.code,{children:"Passage"})}),".",(0,t.jsx)(s.a,{href:"/react-text-game/api/core/classes/Passage#display",children:(0,t.jsx)(s.code,{children:"display"})})]})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);