"use strict";(self.webpackChunk_react_text_game_docs=self.webpackChunk_react_text_game_docs||[]).push([[8184],{531:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(2098);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}},7046:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"core-concepts","title":"Core Concepts","description":"Master React Text Game architecture with entities, passages, state management, audio system, and navigation. Learn about the registry pattern, Valtio reactivity, JSONPath storage, save system, audio management, and best practices for building interactive narratives.","source":"@site/docs/core-concepts.md","sourceDirName":".","slug":"/core-concepts","permalink":"/core-concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/laruss/tree/main/apps/docs/docs/core-concepts.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Core Concepts","description":"Master React Text Game architecture with entities, passages, state management, audio system, and navigation. Learn about the registry pattern, Valtio reactivity, JSONPath storage, save system, audio management, and best practices for building interactive narratives.","keywords":["react game architecture","valtio state management","game entity system","story passages","interactive map","jsonpath storage","game save system","game audio system","reactive game state","audio management","sound effects","background music","text adventure development","narrative game patterns"],"image":"/img/og-image.webp"},"sidebar":"docsSidebar","previous":{"title":"Getting Started","permalink":"/getting-started"},"next":{"title":"MDX Integration","permalink":"/mdx-integration"}}');var a=s(90),i=s(531);const r={sidebar_position:3,title:"Core Concepts",description:"Master React Text Game architecture with entities, passages, state management, audio system, and navigation. Learn about the registry pattern, Valtio reactivity, JSONPath storage, save system, audio management, and best practices for building interactive narratives.",keywords:["react game architecture","valtio state management","game entity system","story passages","interactive map","jsonpath storage","game save system","game audio system","reactive game state","audio management","sound effects","background music","text adventure development","narrative game patterns"],image:"/img/og-image.webp"},o="Core Concepts",l={},c=[{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Game Initialization",id:"game-initialization",level:2},{value:"Entities",id:"entities",level:2},{value:"Entity Factory (Recommended)",id:"entity-factory-recommended",level:3},{value:"Advanced Entities (Class-Based)",id:"advanced-entities-class-based",level:3},{value:"Passages",id:"passages",level:2},{value:"Story Passages",id:"story-passages",level:3},{value:"Interactive Map Passages",id:"interactive-map-passages",level:3},{value:"Widget Passages",id:"widget-passages",level:3},{value:"State Management",id:"state-management",level:2},{value:"Reactive Updates",id:"reactive-updates",level:3},{value:"Storage System",id:"storage-system",level:3},{value:"Navigation",id:"navigation",level:2},{value:"Save System",id:"save-system",level:2},{value:"Using Hooks",id:"using-hooks",level:3},{value:"Available Hooks",id:"available-hooks",level:3},{value:"Direct API",id:"direct-api",level:3},{value:"Audio System",id:"audio-system",level:2},{value:"Features",id:"features",level:3},{value:"Creating Audio Tracks",id:"creating-audio-tracks",level:3},{value:"Global Audio Manager",id:"global-audio-manager",level:3},{value:"React Integration",id:"react-integration",level:3},{value:"useAudio Hook",id:"useaudio-hook",level:4},{value:"useAudioManager Hook",id:"useaudiomanager-hook",level:4},{value:"Automatic Persistence",id:"automatic-persistence",level:3},{value:"Common Patterns",id:"common-patterns",level:3},{value:"Background Music with Crossfade",id:"background-music-with-crossfade",level:4},{value:"Sound Effects Pool",id:"sound-effects-pool",level:4},{value:"Pause Audio During Dialogue",id:"pause-audio-during-dialogue",level:4},{value:"Browser Autoplay Policies",id:"browser-autoplay-policies",level:3},{value:"Audio API Reference",id:"audio-api-reference",level:3},{value:"React Hooks",id:"react-hooks",level:2},{value:"useCurrentPassage",id:"usecurrentpassage",level:3},{value:"useGameEntity",id:"usegameentity",level:3},{value:"useGameIsStarted",id:"usegameisstarted",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Always Initialize First",id:"1-always-initialize-first",level:3},{value:"2. Use Factory Pattern for Simple Entities",id:"2-use-factory-pattern-for-simple-entities",level:3},{value:"3. Organize by Feature",id:"3-organize-by-feature",level:3},{value:"4. Keep Passage Logic Simple",id:"4-keep-passage-logic-simple",level:3},{value:"5. Use TypeScript",id:"5-use-typescript",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"core-concepts",children:"Core Concepts"})}),"\n",(0,a.jsx)(n.p,{children:"Understanding the core concepts of React Text Game will help you build powerful interactive narratives."}),"\n",(0,a.jsx)(n.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,a.jsxs)(n.p,{children:["React Text Game uses a ",(0,a.jsx)(n.strong,{children:"registry pattern"})," with ",(0,a.jsx)(n.strong,{children:"reactive state management"})," (Valtio) to create a seamless game development experience."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Game (Central)             \u2502\n\u2502  - Entity Registry                   \u2502\n\u2502  - Passage Registry                  \u2502\n\u2502  - Navigation                        \u2502\n\u2502  - State Management                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502                    \u2502\n         \u25bc                    \u25bc\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502  Entities   \u2502      \u2502  Passages   \u2502      \u2502 Audio System \u2502\n  \u2502  (Valtio)   \u2502      \u2502  (Screens)  \u2502      \u2502  (Valtio)    \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502                    \u2502                      \u2502\n         \u25bc                    \u25bc                      \u25bc\n  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  \u2502              Storage (JSONPath)                     \u2502\n  \u2502     - Session Storage                               \u2502\n  \u2502     - IndexedDB (Saves)                             \u2502\n  \u2502     - Audio State Persistence                       \u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,a.jsx)(n.h2,{id:"game-initialization",children:"Game Initialization"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"IMPORTANT:"})," You must call ",(0,a.jsx)(n.code,{children:"Game.init()"})," before using any other Game methods or creating entities."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { Game } from '@react-text-game/core';\n\nawait Game.init({\n  gameName: 'My Adventure',\n  isDevMode: true,\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:"The Game class is the central orchestrator that:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Manages entity and passage registries"}),"\n",(0,a.jsx)(n.li,{children:"Handles navigation between passages"}),"\n",(0,a.jsx)(n.li,{children:"Provides save/load functionality"}),"\n",(0,a.jsx)(n.li,{children:"Wraps all objects in Valtio proxies for reactivity"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"entities",children:"Entities"}),"\n",(0,a.jsx)(n.p,{children:"Entities represent game state (player, inventory, quest system, etc.). React Text Game offers two approaches:"}),"\n",(0,a.jsx)(n.h3,{id:"entity-factory-recommended",children:"Entity Factory (Recommended)"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"createEntity"})," factory is the simplest way to create reactive game objects:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { createEntity } from '@react-text-game/core';\n\nconst player = createEntity('player', {\n  name: 'Hero',\n  health: 100,\n  inventory: {\n    gold: 50,\n    items: [] as string[],\n  },\n});\n\n// Direct property access - automatically reactive\nplayer.health -= 10;\nplayer.inventory.items.push('sword');\n\n// Persist changes when needed\nplayer.save();\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Key Features:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Automatic registration with Game"}),"\n",(0,a.jsxs)(n.li,{children:["Direct property access (no ",(0,a.jsx)(n.code,{children:".variables"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"Deep reactivity for nested objects/arrays"}),"\n",(0,a.jsxs)(n.li,{children:["Explicit ",(0,a.jsx)(n.code,{children:"save()"})," calls for controlled persistence"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"advanced-entities-class-based",children:"Advanced Entities (Class-Based)"}),"\n",(0,a.jsxs)(n.p,{children:["For more complex scenarios, extend ",(0,a.jsx)(n.code,{children:"BaseGameObject"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { BaseGameObject } from '@react-text-game/core';\n\nclass Inventory extends BaseGameObject<{ items: string[] }> {\n  constructor() {\n    super({\n      id: 'inventory',\n      variables: { items: [] },\n    });\n  }\n\n  addItem(item: string) {\n    this._variables.items.push(item);\n    this.save();\n  }\n\n  hasItem(item: string): boolean {\n    return this._variables.items.includes(item);\n  }\n}\n\nconst inventory = new Inventory();\n"})}),"\n",(0,a.jsx)(n.h2,{id:"passages",children:"Passages"}),"\n",(0,a.jsx)(n.p,{children:"Passages represent different screens or scenes in your game. Three types are available:"}),"\n",(0,a.jsx)(n.h3,{id:"story-passages",children:"Story Passages"}),"\n",(0,a.jsx)(n.p,{children:"Text-based narrative passages with rich components:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { newStory, Game } from '@react-text-game/core';\n\nconst chapter1 = newStory('chapter1', () => [\n  {\n    type: 'header',\n    content: 'The Beginning',\n    props: { level: 1 }\n  },\n  {\n    type: 'text',\n    content: 'You find yourself in a dark forest...'\n  },\n  {\n    type: 'image',\n    content: '/assets/forest.jpg',\n    props: { alt: 'Dark forest' }\n  },\n  {\n    type: 'actions',\n    content: [\n      {\n        label: 'Go North',\n        action: () => Game.jumpTo('north-path'),\n        color: 'primary'\n      },\n      {\n        label: 'Go South',\n        action: () => Game.jumpTo('south-path'),\n        color: 'secondary'\n      }\n    ]\n  }\n]);\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Available Components:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"text"})," - Text content with ReactNode support"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"header"})," - Semantic headers (h1-h6)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"image"})," - Images with modal viewer"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"video"})," - HTML5 video with controls"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"actions"})," - Interactive button groups"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"conversation"})," - Dialogue with chat/messenger variants"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"anotherStory"})," - Embed other story passages"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"interactive-map-passages",children:"Interactive Map Passages"}),"\n",(0,a.jsx)(n.p,{children:"Map-based interactive passages with hotspots:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { newInteractiveMap, Game } from '@react-text-game/core';\n\nconst worldMap = newInteractiveMap('world-map', {\n  caption: 'World Map',\n  image: '/maps/world.jpg',\n  hotspots: [\n    // Label hotspot on map\n    {\n      type: 'label',\n      content: 'Village',\n      position: { x: 30, y: 40 }, // Percentage (0-100)\n      action: () => Game.jumpTo('village'),\n      props: { color: 'primary' }\n    },\n    // Image hotspot with states\n    {\n      type: 'image',\n      content: {\n        idle: '/icons/chest.png',\n        hover: '/icons/chest-glow.png',\n      },\n      position: { x: 60, y: 70 },\n      action: () => openChest(),\n    },\n    // Conditional hotspot\n    () => player.hasDiscovered('forest') ? {\n      type: 'label',\n      content: 'Forest',\n      position: { x: 80, y: 50 },\n      action: () => Game.jumpTo('forest')\n    } : undefined,\n  ],\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Hotspot Types:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"MapLabelHotspot"})," - Text buttons on map (x/y coordinates)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"MapImageHotspot"})," - Image buttons with state variants"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"SideLabelHotspot"})," - Text buttons on edges (top/bottom/left/right)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"SideImageHotspot"})," - Image buttons on edges"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"MapMenu"})," - Context menu with multiple items"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"widget-passages",children:"Widget Passages"}),"\n",(0,a.jsx)(n.p,{children:"Custom React components as passages:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { newWidget } from '@react-text-game/core';\n\nconst customUI = newWidget('custom-ui', (\n  <div>\n    <h1>Custom Interface</h1>\n    <MyCustomComponent />\n  </div>\n));\n"})}),"\n",(0,a.jsx)(n.h2,{id:"state-management",children:"State Management"}),"\n",(0,a.jsxs)(n.p,{children:["React Text Game uses ",(0,a.jsx)(n.strong,{children:"Valtio"})," for reactive state management and ",(0,a.jsx)(n.strong,{children:"jsonpath-plus"})," for flexible storage queries."]}),"\n",(0,a.jsx)(n.h3,{id:"reactive-updates",children:"Reactive Updates"}),"\n",(0,a.jsx)(n.p,{children:"All entities are automatically wrapped in Valtio proxies:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const player = createEntity('player', { health: 100 });\n\n// Changes automatically trigger React re-renders\nplayer.health -= 10;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"storage-system",children:"Storage System"}),"\n",(0,a.jsx)(n.p,{children:"The storage system uses JSONPath queries with session storage for auto-save:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { Storage } from '@react-text-game/core';\n\n// Get values using JSONPath queries\nconst health = Storage.getValue<number>('$.player.health');\n\n// Set values\nStorage.setValue('$.player.health', 75);\n\n// Full state serialization for save/load\nconst state = Storage.getState();\nStorage.setState(state);\n\n// Check if a path exists\nconst hasInventory = Storage.hasPath('$.player.inventory');\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Storage Features:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Uses ",(0,a.jsx)(n.code,{children:"jsonpath-plus"})," library for flexible querying"]}),"\n",(0,a.jsx)(n.li,{children:"Session storage for auto-save (configurable)"}),"\n",(0,a.jsxs)(n.li,{children:["Protected system paths (prefixed with ",(0,a.jsx)(n.code,{children:"STORAGE_SYSTEM_PATH"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"Type-safe getValue with generic support"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"navigation",children:"Navigation"}),"\n",(0,a.jsx)(n.p,{children:"Navigate between passages using the Game API:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { Game } from '@react-text-game/core';\n\n// Jump to a passage by ID\nGame.jumpTo('chapter1');\n\n// Jump to a passage object\nGame.jumpTo(chapter1);\n\n// Set current without navigation effects\nGame.setCurrent('chapter1');\n\n// Get current passage\nconst current = Game.currentPassage;\n"})}),"\n",(0,a.jsx)(n.h2,{id:"save-system",children:"Save System"}),"\n",(0,a.jsxs)(n.p,{children:["React Text Game includes a comprehensive save/load system using ",(0,a.jsx)(n.strong,{children:"Dexie"})," (IndexedDB wrapper) with encryption support via ",(0,a.jsx)(n.strong,{children:"crypto-js"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"using-hooks",children:"Using Hooks"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { useSaveSlots } from '@react-text-game/core/saves';\n\nfunction SavesList() {\n  const slots = useSaveSlots({ count: 5 });\n\n  return (\n    <div>\n      {slots.map((slot, index) => (\n        <div key={index}>\n          <p>Slot {index + 1}: {slot.data ? 'Saved' : 'Empty'}</p>\n          {slot.data && <p>{slot.data.description}</p>}\n          <button onClick={() => slot.save()}>Save</button>\n          <button onClick={() => slot.load()} disabled={!slot.data}>Load</button>\n          <button onClick={() => slot.delete()} disabled={!slot.data}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"available-hooks",children:"Available Hooks"}),"\n",(0,a.jsxs)(n.p,{children:["All save-related hooks are available from ",(0,a.jsx)(n.code,{children:"@react-text-game/core/saves"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useSaveSlots"})," - Manage multiple save slots with save/load/delete actions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useSaveGame"})," - Save current game state"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useLoadGame"})," - Load saved game state"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useDeleteGame"})," - Delete a specific save"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useDeleteAllSlots"})," - Delete all saves (except system save)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useLastLoadGame"})," - Load the most recent save"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useExportSaves"})," - Export saves to encrypted file"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useImportSaves"})," - Import saves from encrypted file"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"useRestartGame"})," - Restart game from initial state"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"direct-api",children:"Direct API"}),"\n",(0,a.jsxs)(n.p,{children:["The save system also provides direct database functions from ",(0,a.jsx)(n.code,{children:"@react-text-game/core/saves"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { saveGame, loadGame, getAllSaves, deleteSave } from '@react-text-game/core/saves';\n\n// Save manually with optional description and screenshot\nawait saveGame('slot-1', gameData, 'Before boss fight', screenshotBase64);\n\n// Load by slot ID\nconst save = await loadGame(1);\n\n// Get all saves (excluding system saves)\nconst allSaves = await getAllSaves();\n\n// Delete a save\nawait deleteSave(1);\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note:"})," Save IDs are auto-incremented. The system also maintains a special ",(0,a.jsx)(n.code,{children:"SYSTEM_SAVE_NAME"})," for initial state restoration."]}),"\n",(0,a.jsx)(n.h2,{id:"audio-system",children:"Audio System"}),"\n",(0,a.jsx)(n.p,{children:"React Text Game includes a comprehensive audio system with reactive state management, automatic persistence, and global controls. Perfect for background music, sound effects, and voice-over audio."}),"\n",(0,a.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Reactive State"})," - Valtio-powered state for seamless React integration"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Automatic Persistence"})," - Audio state saved and restored automatically"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Global Controls"})," - Master volume, mute all, pause/resume all tracks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Fade Effects"})," - Built-in fade in/out for smooth transitions"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Multiple Tracks"})," - Manage multiple audio files independently"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Browser-friendly"})," - Handles autoplay policies gracefully"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"creating-audio-tracks",children:"Creating Audio Tracks"}),"\n",(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.code,{children:"createAudio"})," factory function from ",(0,a.jsx)(n.code,{children:"@react-text-game/core/audio"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { createAudio, AudioManager } from '@react-text-game/core/audio';\n\n// Basic audio track\nconst bgMusic = createAudio('/audio/background.mp3', {\n  id: 'bg-music',        // Required for persistence\n  volume: 0.7,           // 0.0 to 1.0 (default: 1.0)\n  loop: true,            // Auto-loop (default: false)\n  autoPlay: false,       // Auto-play on creation (default: false)\n});\n\n// Play the track\nawait bgMusic.play();\n\n// Control playback\nbgMusic.pause();\nbgMusic.resume();\nbgMusic.stop();\n\n// Adjust settings\nbgMusic.setVolume(0.5);\nbgMusic.setLoop(true);\nbgMusic.seek(30); // Seek to 30 seconds\n\n// Fade effects\nawait bgMusic.fadeIn(2000);  // Fade in over 2 seconds\nawait bgMusic.fadeOut(1500); // Fade out over 1.5 seconds\n"})}),"\n",(0,a.jsx)(n.h3,{id:"global-audio-manager",children:"Global Audio Manager"}),"\n",(0,a.jsxs)(n.p,{children:["Control all audio tracks globally with the ",(0,a.jsx)(n.code,{children:"AudioManager"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { AudioManager } from '@react-text-game/core/audio';\n\n// Master volume control\nAudioManager.setMasterVolume(0.5); // Set to 50%\nconst volume = AudioManager.getMasterVolume();\n\n// Global playback control\nAudioManager.pauseAll();   // Pause all playing tracks\nAudioManager.resumeAll();  // Resume all paused tracks\nAudioManager.stopAll();    // Stop all tracks\n\n// Global mute control\nAudioManager.muteAll();\nAudioManager.unmuteAll();\n\n// Track management\nconst allTracks = AudioManager.getAllTracks();\nconst music = AudioManager.getTrackById('bg-music');\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Master Volume Behavior:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Master volume multiplies with individual track volumes"}),"\n",(0,a.jsx)(n.li,{children:"Does not modify track volume settings"}),"\n",(0,a.jsx)(n.li,{children:"Example: Track at 0.8 volume \xd7 0.5 master = 0.4 effective volume"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"react-integration",children:"React Integration"}),"\n",(0,a.jsx)(n.p,{children:"The audio system includes dedicated hooks for React components:"}),"\n",(0,a.jsx)(n.h4,{id:"useaudio-hook",children:"useAudio Hook"}),"\n",(0,a.jsx)(n.p,{children:"Monitor individual audio track state:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { createAudio } from '@react-text-game/core/audio';\nimport { useAudio } from '@react-text-game/core';\n\nconst bgMusic = createAudio('/audio/background.mp3', {\n  id: 'bg-music',\n  loop: true,\n});\n\nfunction MusicPlayer() {\n  const audioState = useAudio(bgMusic);\n\n  return (\n    <div>\n      <p>Status: {audioState.isPlaying ? 'Playing' : 'Stopped'}</p>\n      <p>Time: {audioState.currentTime.toFixed(1)}s / {audioState.duration.toFixed(1)}s</p>\n      <p>Volume: {(audioState.volume * 100).toFixed(0)}%</p>\n\n      <button onClick={() => bgMusic.play()}>Play</button>\n      <button onClick={() => bgMusic.pause()}>Pause</button>\n      <button onClick={() => bgMusic.stop()}>Stop</button>\n\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.01\"\n        value={audioState.volume}\n        onChange={(e) => bgMusic.setVolume(parseFloat(e.target.value))}\n      />\n    </div>\n  );\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"useaudiomanager-hook",children:"useAudioManager Hook"}),"\n",(0,a.jsx)(n.p,{children:"Access global audio controls:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'import { useAudioManager } from \'@react-text-game/core\';\n\nfunction AudioSettings() {\n  const audioManager = useAudioManager();\n\n  return (\n    <div>\n      <h2>Audio Settings</h2>\n\n      <label>\n        Master Volume: {(audioManager.masterVolume * 100).toFixed(0)}%\n        <input\n          type="range"\n          min="0"\n          max="1"\n          step="0.01"\n          value={audioManager.masterVolume}\n          onChange={(e) => audioManager.setMasterVolume(parseFloat(e.target.value))}\n        />\n      </label>\n\n      <div>\n        <button onClick={audioManager.muteAll}>Mute All</button>\n        <button onClick={audioManager.unmuteAll}>Unmute All</button>\n        <button onClick={audioManager.pauseAll}>Pause All</button>\n        <button onClick={audioManager.resumeAll}>Resume All</button>\n      </div>\n\n      <p>Active Tracks: {audioManager.getAllTracks().length}</p>\n    </div>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"automatic-persistence",children:"Automatic Persistence"}),"\n",(0,a.jsxs)(n.p,{children:["Audio tracks with an ",(0,a.jsx)(n.code,{children:"id"})," automatically save and restore their state:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// Create audio with ID\nconst music = createAudio('/audio/theme.mp3', {\n  id: 'theme-music',\n  volume: 0.7,\n  loop: true,\n});\n\n// State is automatically saved when it changes\nawait music.play();\nmusic.setVolume(0.5);\n// State persisted automatically\n\n// On game restart/reload\nconst music = createAudio('/audio/theme.mp3', {\n  id: 'theme-music', // Same ID\n});\nmusic.load(); // Restores volume, position, playing state\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"What Gets Persisted:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Volume level"}),"\n",(0,a.jsx)(n.li,{children:"Loop setting"}),"\n",(0,a.jsx)(n.li,{children:"Playback rate"}),"\n",(0,a.jsx)(n.li,{children:"Muted status"}),"\n",(0,a.jsx)(n.li,{children:"Current playback position"}),"\n",(0,a.jsx)(n.li,{children:"Playing/paused state"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,a.jsx)(n.h4,{id:"background-music-with-crossfade",children:"Background Music with Crossfade"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const oldMusic = AudioManager.getTrackById('current-music');\nconst newMusic = createAudio('/audio/new-theme.mp3', {\n  id: 'current-music',\n  loop: true,\n});\n\n// Crossfade between tracks\nif (oldMusic) {\n  await Promise.all([\n    oldMusic.fadeOut(1000),\n    newMusic.fadeIn(1000)\n  ]);\n  oldMusic.dispose();\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"sound-effects-pool",children:"Sound Effects Pool"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// Create one-time sound effect without persistence\nfunction playSoundEffect(src: string) {\n  const sfx = createAudio(src, { volume: 0.8 });\n\n  sfx.play();\n\n  // Auto-cleanup when finished\n  const audio = (sfx as any).audioElement;\n  audio.addEventListener('ended', () => {\n    sfx.dispose();\n  });\n}\n\nplaySoundEffect('/audio/click.mp3');\n"})}),"\n",(0,a.jsx)(n.h4,{id:"pause-audio-during-dialogue",children:"Pause Audio During Dialogue"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"function showDialogue() {\n  // Pause background music\n  AudioManager.pauseAll();\n\n  // Show dialogue...\n\n  // Resume when done\n  AudioManager.resumeAll();\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"browser-autoplay-policies",children:"Browser Autoplay Policies"}),"\n",(0,a.jsx)(n.p,{children:"Modern browsers restrict audio autoplay. Handle this gracefully:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const music = createAudio('/audio/theme.mp3', {\n  autoPlay: true, // May be blocked by browser\n});\n\n// Failures are logged but don't throw\n// Play after user interaction:\ndocument.addEventListener('click', async () => {\n  await music.play(); // Works after interaction\n}, { once: true });\n"})}),"\n",(0,a.jsx)(n.h3,{id:"audio-api-reference",children:"Audio API Reference"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"createAudio(src, options?)"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"src: string"})," - Audio file URL"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"options?: AudioOptions"})," - Configuration options"]}),"\n",(0,a.jsxs)(n.li,{children:["Returns: ",(0,a.jsx)(n.code,{children:"AudioTrack"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"AudioTrack Methods:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"play(): Promise<void>"})," - Start playback"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"pause(): void"})," - Pause playback"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"resume(): void"})," - Resume from pause"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"stop(): void"})," - Stop and reset"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"setVolume(volume: number): void"})," - Set volume (0.0-1.0)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"setLoop(loop: boolean): void"})," - Enable/disable looping"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"setPlaybackRate(rate: number): void"})," - Set playback speed"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"setMuted(muted: boolean): void"})," - Mute/unmute"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"seek(time: number): void"})," - Seek to time in seconds"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"fadeIn(duration?: number): Promise<void>"})," - Fade in effect"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"fadeOut(duration?: number): Promise<void>"})," - Fade out effect"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"getState(): AudioState"})," - Get reactive state"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"save(): void"})," - Save state to storage"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"load(): void"})," - Load state from storage"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"dispose(): void"})," - Clean up and remove"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"AudioManager Methods:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"setMasterVolume(volume: number): void"})," - Set master volume"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"getMasterVolume(): number"})," - Get master volume"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"muteAll(): void"})," - Mute all tracks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"unmuteAll(): void"})," - Unmute all tracks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"pauseAll(): void"})," - Pause all playing tracks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"resumeAll(): void"})," - Resume all paused tracks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"stopAll(): void"})," - Stop all tracks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"getAllTracks(): AudioTrack[]"})," - Get all tracks"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"getTrackById(id: string): AudioTrack | undefined"})," - Get track by ID"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"disposeAll(): void"})," - Dispose all tracks"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"react-hooks",children:"React Hooks"}),"\n",(0,a.jsx)(n.h3,{id:"usecurrentpassage",children:"useCurrentPassage"}),"\n",(0,a.jsx)(n.p,{children:"Monitor the current passage with reactive updates:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { useCurrentPassage } from '@react-text-game/core';\n\nfunction GameScreen() {\n  const passage = useCurrentPassage();\n\n  if (!passage) return <div>Loading...</div>;\n\n  return <div>{/* Render passage */}</div>;\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"usegameentity",children:"useGameEntity"}),"\n",(0,a.jsx)(n.p,{children:"Track entity changes with automatic re-renders:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { useGameEntity } from '@react-text-game/core';\n\nfunction PlayerStats({ player }) {\n  const reactivePlayer = useGameEntity(player);\n\n  return <div>Health: {reactivePlayer.health}</div>;\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"usegameisstarted",children:"useGameIsStarted"}),"\n",(0,a.jsx)(n.p,{children:"Check if game has been initialized:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { useGameIsStarted } from '@react-text-game/core';\n\nfunction GameUI() {\n  const isStarted = useGameIsStarted();\n\n  return isStarted ? <GameScreen /> : <MainMenu />;\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsx)(n.h3,{id:"1-always-initialize-first",children:"1. Always Initialize First"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// \u2705 Correct\nawait Game.init();\nconst player = createEntity('player', { name: 'Hero' });\n\n// \u274c Wrong\nconst player = createEntity('player', { name: 'Hero' });\nawait Game.init();\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-use-factory-pattern-for-simple-entities",children:"2. Use Factory Pattern for Simple Entities"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// \u2705 Recommended for most cases\nconst player = createEntity('player', { health: 100 });\n\n// \u26a0\ufe0f Use only when you need inheritance or private methods\nclass Player extends BaseGameObject { /* ... */ }\n"})}),"\n",(0,a.jsx)(n.h3,{id:"3-organize-by-feature",children:"3. Organize by Feature"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"src/game/\n\u251c\u2500\u2500 entities/\n\u2502   \u251c\u2500\u2500 player.ts\n\u2502   \u251c\u2500\u2500 inventory.ts\n\u2502   \u2514\u2500\u2500 index.ts\n\u251c\u2500\u2500 passages/\n\u2502   \u251c\u2500\u2500 story/\n\u2502   \u2502   \u251c\u2500\u2500 intro.ts\n\u2502   \u2502   \u2514\u2500\u2500 chapter1.ts\n\u2502   \u2514\u2500\u2500 maps/\n\u2502       \u2514\u2500\u2500 worldMap.ts\n\u2514\u2500\u2500 index.ts\n"})}),"\n",(0,a.jsx)(n.h3,{id:"4-keep-passage-logic-simple",children:"4. Keep Passage Logic Simple"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// \u2705 Good - Logic in entity methods\nplayer.takeDamage(10);\n\n// \u274c Avoid - Complex logic in passages\nplayer.health -= 10;\nif (player.health <= 0) { /* ... */ }\n"})}),"\n",(0,a.jsx)(n.h3,{id:"5-use-typescript",children:"5. Use TypeScript"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"// \u2705 Type-safe entities\nconst player = createEntity('player', {\n  name: 'Hero',\n  inventory: [] as string[],  // Explicit array type\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/api/core/",children:(0,a.jsx)(n.strong,{children:"Core API Reference"})})," - Complete API documentation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/api/ui/",children:(0,a.jsx)(n.strong,{children:"UI API Reference"})})," - UI components documentation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/tree/main/apps",children:(0,a.jsx)(n.strong,{children:"Example Projects"})})," - See it in action","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/tree/main/apps/example-game",children:"Example Game"})," - Full game with Vite + React 19"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/tree/main/apps/core-test-app",children:"Core Test App"})," - Core package examples"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/tree/main/apps/ui-test-app",children:"UI Test App"})," - UI components showcase"]}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);