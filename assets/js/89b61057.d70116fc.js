"use strict";(self.webpackChunk_react_text_game_docs=self.webpackChunk_react_text_game_docs||[]).push([[9757],{531:(e,n,l)=>{l.d(n,{R:()=>a,x:()=>d});var s=l(2098);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},9862:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>o,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api/core/functions/useAudioManager","title":"Function: useAudioManager()","description":"useAudioManager(): object","source":"@site/docs/api/core/functions/useAudioManager.md","sourceDirName":"api/core/functions","slug":"/api/core/functions/useAudioManager","permalink":"/api/core/functions/useAudioManager","draft":false,"unlisted":false,"editUrl":"https://github.com/laruss/tree/main/apps/docs/docs/api/core/functions/useAudioManager.md","tags":[],"version":"current","frontMatter":{}}');var r=l(90),i=l(531);const a={},d="Function: useAudioManager()",t={},c=[{value:"Returns",id:"returns",level:2},{value:"disposeAll()",id:"disposeall",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Example",id:"example",level:4},{value:"getAllTracks()",id:"getalltracks",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Example",id:"example-1",level:4},{value:"getMasterVolume()",id:"getmastervolume",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Example",id:"example-2",level:4},{value:"getTrackById()",id:"gettrackbyid",level:3},{value:"Parameters",id:"parameters",level:4},{value:"id",id:"id",level:5},{value:"Returns",id:"returns-4",level:4},{value:"Example",id:"example-3",level:4},{value:"isMuted",id:"ismuted",level:3},{value:"masterVolume",id:"mastervolume",level:3},{value:"muteAll()",id:"muteall",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Example",id:"example-4",level:4},{value:"pauseAll()",id:"pauseall",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Example",id:"example-5",level:4},{value:"resumeAll()",id:"resumeall",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Example",id:"example-6",level:4},{value:"setMasterVolume()",id:"setmastervolume",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"volume",id:"volume",level:5},{value:"Returns",id:"returns-8",level:4},{value:"Example",id:"example-7",level:4},{value:"stopAll()",id:"stopall",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Example",id:"example-8",level:4},{value:"unmuteAll()",id:"unmuteall",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Example",id:"example-9",level:4},{value:"Example",id:"example-10",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"function-useaudiomanager",children:"Function: useAudioManager()"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"useAudioManager"}),"(): ",(0,r.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Defined in: ",(0,r.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/blob/844f325138e639da33a4b93950a7a9a6c18897e5/packages/core/src/hooks/useAudioManager.ts#L56",children:"packages/core/src/hooks/useAudioManager.ts:56"})]}),"\n",(0,r.jsx)(n.p,{children:"React hook to access global audio manager state and controls."}),"\n",(0,r.jsx)(n.p,{children:"This hook provides access to the AudioManager's reactive state\n(master volume, mute status) and bound control methods."}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"Reactive audio manager state and control methods"}),"\n",(0,r.jsx)(n.h3,{id:"disposeall",children:"disposeAll()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"disposeAll"}),": () => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Disposes all audio tracks."}),"\n",(0,r.jsx)(n.p,{children:"Useful for cleanup when shutting down the game."}),"\n",(0,r.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"AudioManager.disposeAll();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getalltracks",children:"getAllTracks()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getAllTracks"}),": () => ",(0,r.jsx)(n.code,{children:"AudioTrack"}),"[]"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets all registered audio tracks."}),"\n",(0,r.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"AudioTrack"}),"[]"]}),"\n",(0,r.jsx)(n.p,{children:"Array of all audio tracks"}),"\n",(0,r.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const tracks = AudioManager.getAllTracks();\nconsole.log(`Total tracks: ${tracks.length}`);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getmastervolume",children:"getMasterVolume()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getMasterVolume"}),": () => ",(0,r.jsx)(n.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the current master volume."}),"\n",(0,r.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"number"})}),"\n",(0,r.jsx)(n.p,{children:"The master volume level (0.0 to 1.0)"}),"\n",(0,r.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const volume = AudioManager.getMasterVolume();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"gettrackbyid",children:"getTrackById()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"getTrackById"}),": (",(0,r.jsx)(n.code,{children:"id"}),") => ",(0,r.jsx)(n.code,{children:"AudioTrack"})," | ",(0,r.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets an audio track by its ID."}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h5,{id:"id",children:"id"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string"})}),"\n",(0,r.jsx)(n.p,{children:"The unique identifier of the audio track"}),"\n",(0,r.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"AudioTrack"})," | ",(0,r.jsx)(n.code,{children:"undefined"})]}),"\n",(0,r.jsx)(n.p,{children:"The audio track, or undefined if not found"}),"\n",(0,r.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const music = AudioManager.getTrackById('bg-music');\nif (music) {\n  music.play();\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ismuted",children:"isMuted"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"isMuted"}),": ",(0,r.jsx)(n.code,{children:"boolean"})," = ",(0,r.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mastervolume",children:"masterVolume"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"masterVolume"}),": ",(0,r.jsx)(n.code,{children:"number"})," = ",(0,r.jsx)(n.code,{children:"1"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"muteall",children:"muteAll()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"muteAll"}),": () => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Mutes all audio tracks."}),"\n",(0,r.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"AudioManager.muteAll();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pauseall",children:"pauseAll()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"pauseAll"}),": () => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Pauses all currently playing audio tracks."}),"\n",(0,r.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"AudioManager.pauseAll();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"resumeall",children:"resumeAll()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"resumeAll"}),": () => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Resumes all paused audio tracks."}),"\n",(0,r.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"AudioManager.resumeAll();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"setmastervolume",children:"setMasterVolume()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"setMasterVolume"}),": (",(0,r.jsx)(n.code,{children:"volume"}),") => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Sets the master volume for all audio tracks."}),"\n",(0,r.jsx)(n.p,{children:"The master volume is multiplied with each track's individual volume.\nThis does not modify individual track volumes - it applies a global multiplier."}),"\n",(0,r.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsx)(n.h5,{id:"volume",children:"volume"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"number"})}),"\n",(0,r.jsx)(n.p,{children:"Master volume level (0.0 to 1.0), clamped to valid range"}),"\n",(0,r.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"AudioManager.setMasterVolume(0.5); // 50% master volume\n"})}),"\n",(0,r.jsx)(n.h3,{id:"stopall",children:"stopAll()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"stopAll"}),": () => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Stops all audio tracks."}),"\n",(0,r.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"AudioManager.stopAll();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"unmuteall",children:"unmuteAll()"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"unmuteAll"}),": () => ",(0,r.jsx)(n.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Unmutes all audio tracks."}),"\n",(0,r.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"example-9",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"AudioManager.unmuteAll();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example-10",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { useAudioManager } from \'@react-text-game/core\';\n\nfunction AudioSettingsMenu() {\n  const audioManager = useAudioManager();\n\n  return (\n    <div>\n      <h2>Audio Settings</h2>\n\n      <label>\n        Master Volume: {(audioManager.masterVolume * 100).toFixed(0)}%\n        <input\n          type="range"\n          min="0"\n          max="1"\n          step="0.01"\n          value={audioManager.masterVolume}\n          onChange={(e) => audioManager.setMasterVolume(parseFloat(e.target.value))}\n        />\n      </label>\n\n      <button onClick={audioManager.muteAll}>\n        Mute All\n      </button>\n      <button onClick={audioManager.unmuteAll}>\n        Unmute All\n      </button>\n      <button onClick={audioManager.pauseAll}>\n        Pause All\n      </button>\n      <button onClick={audioManager.resumeAll}>\n        Resume All\n      </button>\n\n      <p>Muted: {audioManager.isMuted ? \'Yes\' : \'No\'}</p>\n      <p>Total Tracks: {audioManager.getAllTracks().length}</p>\n    </div>\n  );\n}\n'})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);