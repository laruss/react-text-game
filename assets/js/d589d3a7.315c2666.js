"use strict";(self.webpackChunk_react_text_game_docs=self.webpackChunk_react_text_game_docs||[]).push([[7924],{605:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This guide will help you set up React Text Game in your project.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/react-text-game/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/laruss/react-text-game/tree/main/apps/docs/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Welcome to React Text Game","permalink":"/react-text-game/"},"next":{"title":"Core Concepts","permalink":"/react-text-game/core-concepts"}}');var r=t(1085),s=t(1184);const i={sidebar_position:2},c="Getting Started",l={},o=[{value:"Installation",id:"installation",level:2},{value:"Core Package Only",id:"core-package-only",level:3},{value:"Core + UI Packages",id:"core--ui-packages",level:3},{value:"UI Package Setup",id:"ui-package-setup",level:2},{value:"1. Install Tailwind CSS",id:"1-install-tailwind-css",level:3},{value:"2. Import UI Styles",id:"2-import-ui-styles",level:3},{value:"Basic Setup",id:"basic-setup",level:2},{value:"Using Core Package Only",id:"using-core-package-only",level:3},{value:"Using Core + UI Packages",id:"using-core--ui-packages",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Examples",id:"examples",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Game Not Initializing",id:"game-not-initializing",level:3},{value:"UI Components Not Styled",id:"ui-components-not-styled",level:3},{value:"TypeScript Errors",id:"typescript-errors",level:3},{value:"Need Help?",id:"need-help",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsx)(n.p,{children:"This guide will help you set up React Text Game in your project."}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["React Text Game consists of two packages: the core engine (",(0,r.jsx)(n.code,{children:"@react-text-game/core"}),") and the UI components (",(0,r.jsx)(n.code,{children:"@react-text-game/ui"}),")."]}),"\n",(0,r.jsx)(n.h3,{id:"core-package-only",children:"Core Package Only"}),"\n",(0,r.jsx)(n.p,{children:"If you want to build your own UI, you can install just the core package:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Bun\nbun add @react-text-game/core\n\n# npm\nnpm install @react-text-game/core\n\n# yarn\nyarn add @react-text-game/core\n\n# pnpm\npnpm add @react-text-game/core\n"})}),"\n",(0,r.jsx)(n.h3,{id:"core--ui-packages",children:"Core + UI Packages"}),"\n",(0,r.jsx)(n.p,{children:"For a complete solution with ready-to-use React components:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Bun\nbun add @react-text-game/core @react-text-game/ui\n\n# npm\nnpm install @react-text-game/core @react-text-game/ui\n\n# yarn\nyarn add @react-text-game/core @react-text-game/ui\n\n# pnpm\npnpm add @react-text-game/core @react-text-game/ui\n"})}),"\n",(0,r.jsx)(n.h2,{id:"ui-package-setup",children:"UI Package Setup"}),"\n",(0,r.jsx)(n.p,{children:"If you're using the UI package, you need to configure Tailwind CSS:"}),"\n",(0,r.jsx)(n.h3,{id:"1-install-tailwind-css",children:"1. Install Tailwind CSS"}),"\n",(0,r.jsxs)(n.p,{children:["Follow the ",(0,r.jsx)(n.a,{href:"https://tailwindcss.com/docs/installation",children:"official Tailwind installation guide"})," for your stack."]}),"\n",(0,r.jsx)(n.h3,{id:"2-import-ui-styles",children:"2. Import UI Styles"}),"\n",(0,r.jsxs)(n.p,{children:["Import the UI styles in your global CSS file (e.g., ",(0,r.jsx)(n.code,{children:"src/index.css"})," or ",(0,r.jsx)(n.code,{children:"src/main.css"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:'@import "@react-text-game/ui/styles";\n\n/* Optional: Override theme colors */\n@theme {\n  --color-primary-500: oklch(0.65 0.25 265);\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,r.jsx)(n.h3,{id:"using-core-package-only",children:"Using Core Package Only"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Game, createEntity, newStory } from '@react-text-game/core';\n\n// IMPORTANT: Initialize the game first\nawait Game.init({\n  gameName: 'My Text Adventure',\n  isDevMode: true,\n});\n\n// Create game entities\nconst player = createEntity('player', {\n  name: 'Hero',\n  health: 100,\n});\n\n// Create story passages\nconst intro = newStory('intro', () => [\n  {\n    type: 'header',\n    content: 'Welcome!',\n    props: { level: 1 }\n  },\n  {\n    type: 'text',\n    content: 'Your adventure begins...'\n  },\n]);\n\n// Start the game\nGame.jumpTo(intro);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"using-core--ui-packages",children:"Using Core + UI Packages"}),"\n",(0,r.jsx)(n.p,{children:"The UI package provides a complete game interface with minimal setup:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// src/App.tsx\nimport { GameProvider, PassageController } from '@react-text-game/ui';\n\nexport function App() {\n  return (\n    <GameProvider options={{ gameName: 'My Text Adventure', isDevMode: true }}>\n      <PassageController />\n    </GameProvider>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then define your game entities and passages:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// src/game/entities.ts\nimport { createEntity } from '@react-text-game/core';\n\nexport const player = createEntity('player', {\n  name: 'Hero',\n  health: 100,\n  inventory: [] as string[],\n});\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// src/game/passages.ts\nimport { newStory, Game } from '@react-text-game/core';\nimport { player } from './entities';\n\nexport const intro = newStory('intro', () => [\n  {\n    type: 'header',\n    content: 'Welcome to the Game',\n    props: { level: 1 }\n  },\n  {\n    type: 'text',\n    content: `Hello, ${player.name}! Your health is ${player.health}.`\n  },\n  {\n    type: 'actions',\n    content: [\n      {\n        label: 'Start Adventure',\n        action: () => Game.jumpTo('chapter1'),\n        color: 'primary'\n      }\n    ]\n  }\n]);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsx)(n.p,{children:"Here's a recommended project structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"src/\n\u251c\u2500\u2500 game/\n\u2502   \u251c\u2500\u2500 entities/          # Game entities (player, inventory, etc.)\n\u2502   \u2502   \u251c\u2500\u2500 player.ts\n\u2502   \u2502   \u251c\u2500\u2500 inventory.ts\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u251c\u2500\u2500 passages/          # Game passages (story screens)\n\u2502   \u2502   \u251c\u2500\u2500 intro.ts\n\u2502   \u2502   \u251c\u2500\u2500 chapter1.ts\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u2514\u2500\u2500 index.ts           # Game initialization\n\u251c\u2500\u2500 App.tsx                # Main app component\n\u2514\u2500\u2500 main.tsx               # Entry point\n"})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Now that you have the basics set up, learn more about:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/core-concepts",children:(0,r.jsx)(n.strong,{children:"Core Concepts"})})," - Understand entities, passages, and state management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/api/core",children:(0,r.jsx)(n.strong,{children:"Core API"})})," - Complete API reference for the core package"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/api/ui",children:(0,r.jsx)(n.strong,{children:"UI API"})})," - Complete API reference for the UI package"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:"Check out the example game in the repository:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/tree/main/apps/example-game",children:"Example Game Source"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"game-not-initializing",children:"Game Not Initializing"}),"\n",(0,r.jsxs)(n.p,{children:["Make sure you call ",(0,r.jsx)(n.code,{children:"Game.init()"})," before creating any entities or passages:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// \u274c Wrong\nconst player = createEntity('player', { name: 'Hero' });\nawait Game.init();\n\n// \u2705 Correct\nawait Game.init();\nconst player = createEntity('player', { name: 'Hero' });\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ui-components-not-styled",children:"UI Components Not Styled"}),"\n",(0,r.jsx)(n.p,{children:"Ensure you've imported the UI styles in your global CSS:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:'@import "@react-text-game/ui/styles";\n'})}),"\n",(0,r.jsx)(n.p,{children:"And that Tailwind CSS is properly configured for your project."}),"\n",(0,r.jsx)(n.h3,{id:"typescript-errors",children:"TypeScript Errors"}),"\n",(0,r.jsx)(n.p,{children:"Make sure you have TypeScript 5.6+ installed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bun add -d typescript@latest\n"})}),"\n",(0,r.jsx)(n.h2,{id:"need-help",children:"Need Help?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/laruss/react-text-game/issues",children:"Report an issue"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/laruss/react-text-game",children:"View the source code"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1184:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var a=t(4041);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);